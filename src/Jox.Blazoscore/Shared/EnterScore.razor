<form onsubmit="return false">
    <div class="d-flex flex-nowrap align-items-baseline mb-2">
        <div class="order-2 p-1">
            <input @bind="Score" inputmode="numeric" size="4" />
        </div>
        <div class="order-1 p-1">
            <button type="button" class="btn btn-info float-left" style="float:le" @onclick="() => BumpScore(-10)">
                -10
            </button>
            <button type="button" class="btn btn-info float-left" @onclick="() => BumpScore(-1)">
                <span class="oi oi-minus"></span>
            </button>
        </div>
        <div class="order-3 p-1">
            <button type ="button" class="btn btn-info" @onclick="() => BumpScore(1)">
                <span class="oi oi-plus"></span>
            </button>
            <button type="button" class="btn btn-info" @onclick="() => BumpScore(10)">
                +10
            </button>
        </div>
    </div>
    <div>
        <button class="btn btn-primary" @onclick="Confirm" type="submit">
            <span class="oi oi-check"></span> Confirm
        </button>
        <button class="btn btn-danger" @onclick="Cancel" type="reset">
            <span class="oi oi-x"></span> Cancel
        </button>
    </div>
</form>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = null!;

    int Score { get; set; }

    void BumpScore(int delta)
    {
        Score += delta;
        StateHasChanged();
    }

    Task Confirm() => BlazoredModal.CloseAsync(ModalResult.Ok(Score));
    Task Cancel() => BlazoredModal.CancelAsync();
}
